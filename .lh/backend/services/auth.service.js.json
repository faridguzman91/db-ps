{
    "sourceFile": "backend/services/auth.service.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1669143640226,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1669143708084,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,5 +6,50 @@\n \r\n require(\"dotenv\").config();\r\n \r\n const bcrypt = require(\"bcrypt\");\r\n-const jwt = require(\"../utils/webtokens\");\n\\ No newline at end of file\n+const jwt = require(\"../utils/webtokens\");\r\n+\r\n+class AuthService {\r\n+    static async registerUser(req, res) {\r\n+        const {\r\n+            email,\r\n+            password\r\n+        } = req.body;\r\n+        try {\r\n+            const user = await prisma.user.findUnique({\r\n+                where: {\r\n+                    email: email,\r\n+                },\r\n+            });\r\n+            if (user) {\r\n+                return res.status(409).json({\r\n+                    status: false,\r\n+                    message: \"User already exists\",\r\n+                });\r\n+            }\r\n+            const hashedPassword = await bcrypt.hash(password, 10);\r\n+            const newUser = await prisma.user.create({\r\n+                data: {\r\n+                    email: email,\r\n+                    password: hashedPassword,\r\n+                },\r\n+            });\r\n+            const accessToken = await jwt.signAccessToken({\r\n+                email: newUser.email,\r\n+            });\r\n+            const refreshToken = await jwt.signRefreshToken({\r\n+                email: newUser.email,\r\n+            });\r\n+            res.status(201).json({\r\n+                status: true,\r\n+                message: \"User created successfully\",\r\n+                data: {\r\n+                    accessToken,\r\n+                    refreshToken,\r\n+                },\r\n+            });\r\n+        } catch (error) {\r\n+            console.log(error);\r\n+        }\r\n+    }\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1669143716124,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,5 +51,7 @@\n         } catch (error) {\r\n             console.log(error);\r\n         }\r\n     }\r\n-}\n\\ No newline at end of file\n+}\r\n+\r\n+module.exports = AuthService;\n\\ No newline at end of file\n"
                }
            ],
            "date": 1669143640226,
            "name": "Commit-0",
            "content": "import {\r\n    PrismaClient\r\n} from \"@prisma/client\";\r\n\r\nconst prisma = new PrismaClient();\r\n\r\nrequire(\"dotenv\").config();\r\n\r\nconst bcrypt = require(\"bcrypt\");\r\nconst jwt = require(\"../utils/webtokens\");"
        }
    ]
}